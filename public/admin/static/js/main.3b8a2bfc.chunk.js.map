{"version":3,"sources":["appicon.PNG","api/httpcliennt.js","actions/shcm.action.js","helpers/StyleVariable.js","components/Login.style.js","components/Login.js","components/Header.js","components/TapDetail.js","components/Dashboard.js","components/Requests.js","routes.js","App.js","serviceWorker.js","store.js","reducers/index.js","reducers/shcm.reducer.js","index.js"],"names":["module","exports","axiosInstance","fetch","url","a","tokencConfig","baseConfig","headers","get","response","status","data","error","Error","statusText","put","configurationSetting","axios","create","defaults","baseURL","timeout","fetchTap","successCallback","failureCallback","dispatch","then","success","type","catch","err","fetchRequests","StyleVariables","useStyles","makeStyles","theme","root","padding","spacing","height","marginTop","paper","display","flexDirection","alignItems","form","width","submit","margin","spaceTop","linkItem","color","textDecoration","staticLink","brandLogo","justifyContent","panelRight","breakpoints","down","panelLeft","authInnerForm","textAlign","up","table","minWidth","modal","connect","state","isAuth","authAction","validationSchema","object","username","string","required","password","classes","enqueueSnackbar","useSnackbar","to","Container","component","className","CssBaseline","Paper","elevation","Box","p","xs","sm","md","src","brandLogoBig","alt","style","fontSize","py","px","xl","Typography","variant","gutterBottom","initialValues","onSubmit","values","resetForm","setErrors","noValidate","autoComplete","name","as","TextField","label","fullWidth","id","msg","Grid","container","justify","item","Button","size","flexGrow","menuButton","marginRight","title","float","logout","toolbar","selected","ButtonAppBar","AppBar","position","Toolbar","onClick","window","location","CreateCsr","props","detail","onCancel","modalPaper","user","first_name","last_name","collection","map","date","weekDay","tapCollection","tapItem","Fragment","key","tap_in","moment","format","tap_out","reason","Divider","itemDivider","workDuration","users","React","useState","showDetail","setShowDetail","setDetail","useEffect","isEmpty","handleRowClick","e","currentTarget","attributes","value","fetchSingleTap","history","find","toString","Object","keys","Array","isArray","mItem","TapDetail","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","data-id","hover","scope","email","active","updateUser","requests","setRequests","onApprove","event","dataId","Tooltip","IconButton","acceptIcon","Routes","exact","path","App","Boolean","hostname","match","enhancer","combineReducers","action","reduxImmutableStateInvariant","require","default","composeWithDevTools","applyMiddleware","thunk","store","createStore","rootReducer","ReactDOM","render","StrictMode","maxSnack","anchorOrigin","horizontal","vertical","preventDuplicate","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.3b8a2bfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/appicon.067a11f2.PNG\";","import axios from 'axios'\r\n\r\nlet axiosInstance = null\r\nconst configurationSetting = () => {\r\n  axiosInstance = axios.create()\r\n  axiosInstance.defaults.baseURL = 'http://shcm-project.xyz'\r\n  axiosInstance.defaults.timeout = 10000\r\n}\r\n\r\nasync function fetch(url, tokencConfig = {}) {\r\n  const baseConfig = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    ...tokencConfig,\r\n  }\r\n  const response = await axiosInstance.get(url, baseConfig)\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return { data: response.data, status: response.status }\r\n  }\r\n  const error = new Error(response.statusText)\r\n  error.response = response\r\n  throw error\r\n}\r\n\r\nfunction post(url, data, tokencConfig = {}) {\r\n  const baseConfig = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    ...tokencConfig,\r\n  }\r\n  return axios.post(url, data, baseConfig).then((response) => {\r\n    if (response.status >= 200 && response.status < 300) {\r\n    return { data: response.data, status: response.status }\r\n  }\r\n  const error = new Error(response.statusText)\r\n  error.response = response\r\n  throw error\r\n  }).catch((err) => {\r\n    throw err\r\n  })\r\n}\r\n\r\nasync function put(url, data, tokencConfig = {}) {\r\n  const baseConfig = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    ...tokencConfig,\r\n  }\r\n  const response = await axiosInstance.put(url, data, baseConfig)\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return { data: response.data, status: response.status }\r\n  }\r\n  const error = new Error(response.statusText)\r\n  error.response = response\r\n  throw error\r\n}\r\n\r\nasync function remove(url, tokencConfig = {}) {\r\n  const baseConfig = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    ...tokencConfig,\r\n  }\r\n  const response = await axiosInstance.delete(url, baseConfig)\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return { status: response.status }\r\n  }\r\n  const error = new Error(response.statusText)\r\n  error.response = response\r\n  throw error\r\n}\r\n\r\nexport { fetch, post, put, remove }\r\n\r\nexport default configurationSetting","import {fetch, put} from './../api/httpcliennt';\r\nimport get from 'lodash/get';\r\n\r\nexport const authAction = () => dispatch =>\r\n  dispatch({\r\n    type: 'AUTH',\r\n    data: true,\r\n  });\r\n\r\nexport const fetchTap = (successCallback, failureCallback) => (dispatch) => {\r\n  const url = 'api/user';\r\n  return fetch(url, {})\r\n    .then(({data}) => {\r\n      if (!data.success) {\r\n        data = [];\r\n      }\r\n      dispatch({\r\n          type: 'USERS',\r\n          data: get(data, 'data', [])\r\n      })\r\n      if (typeof successCallback === 'function') {\r\n        successCallback(get(data, 'data', []));\r\n      }\r\n    })\r\n    .catch(err => {\r\n      if (typeof failureCallback === 'function') {\r\n        failureCallback(err);\r\n      }\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const fetchSingleTap = (id, successCallback, failureCallback) => {\r\n  const url = 'api/tap';\r\n  return fetch(`${url}/${id}`, {})\r\n    .then(({data}) => {\r\n      if (!data.success) {\r\n        data = [];\r\n      }\r\n      if (typeof successCallback === 'function') {\r\n        successCallback(get(data, 'data', []));\r\n      }\r\n    })\r\n    .catch(err => {\r\n      if (typeof failureCallback === 'function') {\r\n        failureCallback(err);\r\n      }\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const fetchRequests = (successCallback, failureCallback) => {\r\n  const url = 'api/requests';\r\n  return fetch(url, {})\r\n    .then(({data}) => {\r\n      if (!data.success) {\r\n        data = [];\r\n      }\r\n      if (typeof successCallback === 'function') {\r\n        successCallback(get(data, 'data', []));\r\n      }\r\n    })\r\n    .catch(err => {\r\n      if (typeof failureCallback === 'function') {\r\n        failureCallback(err);\r\n      }\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const updateUser = (id, successCallback, failureCallback) => (dispatch) => {\r\n  const url = 'api/user';\r\n  return put(`${url}/${id}`, { active: 1 })\r\n    .then(() => {\r\n      fetchTap()(dispatch)\r\n      if (typeof successCallback === 'function') {\r\n        successCallback();\r\n      }\r\n    })\r\n    .catch(err => {\r\n      if (typeof failureCallback === 'function') {\r\n        failureCallback(err);\r\n      }\r\n      throw err;\r\n    });\r\n};","// let isLoader;\r\n\r\nexport const StyleVariables = {\r\n  // Colors\r\n  lightNavy: '#4C099A',\r\n  lightGrey: '#a1a0ae',\r\n  mutedColor: '#888888',\r\n  whiteColor: '#fff',\r\n  appBackground: '#f0f6ff',\r\n  defaultGrey: '#e0e0e0',\r\n  purpleLight: '#f6f7ff',\r\n  success: '#19865a',\r\n  purpleMid: '#7cc4ff',\r\n  lightGreen: '#c9e0dd',\r\n  yellowBright: '#f6e990',\r\n  lightPink: '#feb5c8',\r\n  darkRed: '#e10011',\r\n  solitude: '#DDE6F2',\r\n  yellowLight: '#F0EDD9',\r\n  offRed: '#F0D9DF',\r\n  offWhite: 'rgba(255,255,255,0.5)',\r\n  offBlue: '#C8D6ED',\r\n  denim: '#1B58B5',\r\n  danube: '#6D94D0',\r\n  // Meserments\r\n  fullHeight: '100%',\r\n  fullWidth: '100%',\r\n  // Alignment\r\n  alignAuto: 'auto',\r\n  alignLeft: 'left',\r\n  alignRight: 'right',\r\n  alignCenter: 'center',\r\n  alignMiddle: 'middle',\r\n  // Spacing\r\n  spacingZero: '0',\r\n  spacingHalf: '0.5rem',\r\n  spacingOne: '1rem',\r\n  spacingTwo: '2rem',\r\n  // None value\r\n  none: 'none',\r\n  // positions\r\n  absolute: 'absolute',\r\n  relative: 'relative',\r\n  fixed: 'fixed',\r\n  static: 'static',\r\n  // Display\r\n  displayFlex: 'flex',\r\n  displayInlineFlex: 'inline-flex',\r\n  displayBlock: 'block',\r\n  spaceBetween: 'space-between',\r\n  flexDirectionColumn: 'column',\r\n  flexDirectionRow: 'row',\r\n  alignItemsStart: 'flex-start',\r\n  alignItemsEnd: 'flex-end',\r\n\r\n  // Cursor\r\n  pointer: 'pointer',\r\n  cursorMove: 'move',\r\n  //Decoration\r\n  underline: 'underline',\r\n  // Header Shadow\r\n  headerShadow:\r\n    '0px 2px 5px -1px rgba(85, 108, 214, 0.2), ' +\r\n    '0px 1px 15px 10px rgba(85, 108, 214, 0.14), ' +\r\n    '0px 1px 10px 0px rgba(85, 108, 214, 0.12)',\r\n  //Card Shadow\r\n  cardShadow:\r\n    '0px 2px 5px -1px rgba(85, 108, 214, 0.2), ' +\r\n    '0px 1px 15px 5px rgba(85, 108, 214, 0.14), ' +\r\n    '0px 1px 10px 0px rgba(85, 108, 214, 0.12)',\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { StyleVariables } from './../helpers/StyleVariable'\r\n\r\n/**\r\n * Material UI framework styling object\r\n * @type {StylesHook<Styles<Theme, {}, string>>}\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(0),\r\n    height: '100vh',\r\n    marginTop: '20px'\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: StyleVariables.displayFlex,\r\n    flexDirection: StyleVariables.flexDirectionRow,\r\n    alignItems: StyleVariables.alignCenter,\r\n    height: StyleVariables.fullHeight,\r\n  },\r\n  form: {\r\n    width: StyleVariables.fullWidth, // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  spaceTop: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  linkItem: {\r\n    color: StyleVariables.mutedColor,\r\n    textDecoration: StyleVariables.none,\r\n    '&:hover': {\r\n      textDecoration: StyleVariables.underline,\r\n    },\r\n  },\r\n  staticLink: {\r\n    color: StyleVariables.whiteColor,\r\n    textDecoration: StyleVariables.none,\r\n    margin: theme.spacing(0, 1, 1),\r\n    '&:hover': {\r\n      textDecoration: StyleVariables.underline,\r\n    },\r\n  },\r\n  brandLogo: {\r\n    alignItems: StyleVariables.alignCenter,\r\n    justifyContent: StyleVariables.alignCenter,\r\n    width: StyleVariables.fullWidth,\r\n    display: StyleVariables.displayFlex,\r\n    height: StyleVariables.fullHeight,\r\n  },\r\n  panelRight: {\r\n    width: '65%',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  panelLeft: {\r\n    width: '35%',\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  authInnerForm: {\r\n    textAlign: StyleVariables.alignCenter,\r\n    margin: StyleVariables.alignAuto,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '80%',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '70%',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: '60%',\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n}))\r\n\r\nexport default useStyles\r\n","import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  CssBaseline,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport {connect} from 'react-redux';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport get from 'lodash/get'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useSnackbar } from 'notistack'\r\nimport React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { authAction } from './../actions/shcm.action'\r\n\r\nimport brandLogoBig from './../appicon.PNG'\r\nimport useStyles from './Login.style'\r\n\r\nfunction Login({ authAction, isAuth }) {\r\n  const formInitialState = {\r\n    username: '',\r\n    password: '',\r\n  }\r\n  const validationSchema = object({\r\n    username: string().required(),\r\n    password: string().required('Password is required'),\r\n  })\r\n  const classes = useStyles()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const onSubmit = (values, { resetForm, setErrors }) => {\r\n    if (values.username === 'admin' && values.password === 'admin') {\r\n      authAction()\r\n\t\t\tresetForm()\r\n\t\t\tenqueueSnackbar('Login Successful!', { variant: 'success' })\r\n    } else {\r\n\t\t\tenqueueSnackbar(\"'Login Failed!\", {\r\n          variant: 'error',\r\n        })\r\n\t\t}\r\n  }\r\n\r\n  if (isAuth) {\r\n    return <Redirect to=\"dashboard\" />\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Paper className={classes.paper} elevation={0}>\r\n        <Box\r\n          height=\"100%\"\r\n          p={3}\r\n          display={{ xs: 'none', sm: 'none', md: 'flex' }}\r\n          className={classes.panelLeft + ' auth-left-panel'}\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <div className={classes.brandLogo}>\r\n            <img className=\"brand-logo\" src={brandLogoBig} alt=\"\" />\r\n          <h1 style={{ fontSize: '70px' }}>SHCM</h1>\r\n          </div>\r\n        </Box>\r\n        <Box\r\n          height=\"100%\"\r\n          py={5}\r\n          px={{ xs: 3, sm: 4, md: 5, xl: 10 }}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          className={classes.panelRight + ' auth-right-panel'}\r\n        >\r\n          <div className={classes.authInnerForm}>\r\n            <Typography\r\n              className=\"auth-title\"\r\n              component=\"h1\"\r\n              variant=\"h4\"\r\n              gutterBottom\r\n            >\r\n              Login\r\n            </Typography>\r\n            <Typography component=\"p\" variant=\"subtitle2\">\r\n              Please login into admin account.\r\n            </Typography>\r\n            <Formik\r\n              validationSchema={validationSchema}\r\n              initialValues={formInitialState}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {() => (\r\n                <Form className={classes.form} noValidate autoComplete={'off'}>\r\n                  <Field\r\n                    name=\"username\"\r\n                    margin=\"normal\"\r\n                    as={TextField}\r\n                    label=\"UserName\"\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    autoComplete=\"username\"\r\n                  />\r\n                  <ErrorMessage name=\"username\">\r\n                    {(msg) => <span className=\"error\">{msg}</span>}\r\n                  </ErrorMessage>\r\n                  <Field\r\n                    name=\"password\"\r\n                    margin=\"normal\"\r\n                    type=\"password\"\r\n                    as={TextField}\r\n                    label=\"Password\"\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    autoComplete=\"password\"\r\n                  />\r\n                  <ErrorMessage name=\"password\">\r\n                    {(msg) => <span className=\"error\">{msg}</span>}\r\n                  </ErrorMessage>\r\n                  <Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    justify=\"space-between\"\r\n                    className={classes.spaceTop}\r\n                  >\r\n                    <Grid item>\r\n                      <Button\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n  )\r\n  // }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.isAuth,\r\n});\r\n\r\n/**\r\n *  connect function of redux\r\n */\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    authAction,\r\n  },\r\n)(Login);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n\t\tfloat: \"left\",\r\n\t\tmargin: \"0 10px\"\r\n  },\r\n  logout: {\r\n      float: \"right\"\r\n  },\r\n  toolbar: {\r\n      display: \"flex\",\r\n      justifyContent: 'space-between'\r\n  },\r\n  linkItem: {\r\n    color: '#fff',\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  selected: {\r\n    color: 'red',\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar({ selected }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n              <Link className={`${classes.linkItem} ${selected===\"dashboard\" ? classes.selected : \"\"}`} to=\"/dashboard\">Home</Link>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n              <Link className={`${classes.linkItem} ${selected===\"requests\" ? classes.selected : \"\"}`} to=\"/requests\">Requests</Link>\r\n\t\t\t\t\t\t</Typography>\r\n          </div>\r\n          <Button onClick={() => { window.location = '/' }} color=\"inherit\" className={classes.logout}>Logout</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import {Box, Button, Paper, Typography} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from 'moment'\r\nimport React from \"react\";\r\nimport useStyles from \"./Login.style\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n/**\r\n * Defines a component Create CSR modal\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\n\r\nfunction CreateCsr(props) {\r\n    const classes = useStyles();\r\n    const { detail, onCancel } = props;\r\n    return (\r\n        <Paper component=\"div\" className={classes.modalPaper + \" modal\"}>\r\n            <div className=\"modal-container\">\r\n                <div className=\"modal-header\">\r\n                    <Typography component=\"h5\" variant=\"h6\">\r\n                    {`${detail.user.first_name} ${detail.user.last_name}`}\r\n                    </Typography>\r\n                </div>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-content-child\">\r\n                    {detail.collection.map(item => (\r\n                        <>\r\n                            <Box style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <Typography>{item.date}</Typography>\r\n                                <Typography>{item.weekDay}</Typography>\r\n                            </Box>\r\n                            {item.tapCollection.map(tapItem => (\r\n                                <React.Fragment key={tapItem.id}>\r\n                                    <Box style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <Typography>{`Tap in - ${\r\n                                            tapItem.tap_in\r\n                                            ? moment(tapItem.tap_in).format('h:mm:ss A')\r\n                                            : ''\r\n                                        }`}</Typography>\r\n                                        <Typography>{`Tap out - ${\r\n                                            tapItem.tap_out\r\n                                            ? moment(tapItem.tap_out).format('h:mm:ss A')\r\n                                            : 'TBA'\r\n                                        }`}</Typography>\r\n                                    </Box>\r\n                                    {tapItem.reason && <Typography>{`Reason: ${tapItem.reason}`}</Typography>}\r\n                                    <Divider />\r\n                                </React.Fragment>\r\n                            ))}\r\n                            <Box itemDivider>\r\n                                <Typography>{item.workDuration}</Typography>\r\n                            </Box>\r\n                            <div style={{ height: '20px' }} />\r\n                        </>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n                <Box className=\"modal-action\" px={4} py={2} display=\"flex\" justifyContent=\"flex-end\">\r\n                <Button variant=\"outlined\" color=\"primary\"\r\n                        onClick={onCancel}>\r\n                    Cancel\r\n                </Button>\r\n            </Box>\r\n            </div>\r\n        </Paper>\r\n    );\r\n\r\n\r\n}\r\n\r\nCreateCsr.propTypes = {\r\n    siteObject:PropTypes.object,\r\n\tcallback:PropTypes.func,\r\n\tcloseCSRScreen: PropTypes.func\r\n};\r\n\r\n/**\r\n * Create CSR   modal component\r\n */\r\nexport default CreateCsr;","import {\r\n    Box,\r\n    Button,\r\n    Container,\r\n    CssBaseline,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Typography,\r\n  } from '@material-ui/core'\r\n  import Table from '@material-ui/core/Table';\r\n  import TableBody from '@material-ui/core/TableBody';\r\n  import TableCell from '@material-ui/core/TableCell';\r\n  import TableContainer from '@material-ui/core/TableContainer';\r\n  import TableHead from '@material-ui/core/TableHead';\r\n  import TableRow from '@material-ui/core/TableRow';\r\n  import {connect} from 'react-redux';\r\n\timport React from 'react'\r\n  import { Redirect } from 'react-router-dom'\r\n\timport Header from './Header'\r\n  import useStyles from './Login.style'\r\n  import { fetchTap, fetchSingleTap } from './../actions/shcm.action'\r\n  import isEmpty from 'lodash/isEmpty'\r\n  import TapDetail from './TapDetail'\r\n\r\n const mapHistory = function(history) {\r\n    return history\r\n      .map(item => item[Object.keys(item)[0]])\r\n      .map(item => {\r\n        return {\r\n          ...item,\r\n          tapCollection: Array.isArray(item.tapCollection)\r\n            ? item.tapCollection\r\n            : Object.keys(item.tapCollection).map(\r\n                mItem => item.tapCollection[mItem],\r\n              ),\r\n        };\r\n      });\r\n  };\r\n \r\n  function Dashboard({ fetchTap, users, isAuth }) { \r\n    const classes = useStyles()\r\n    const [showDetail, setShowDetail] = React.useState(false)\r\n    const [detail, setDetail] = React.useState({})\r\n    React.useEffect(() => {\r\n      if (isEmpty(users)) {\r\n        fetchTap()\r\n      }\r\n    }, [])\r\n    const handleRowClick = function (e) {\r\n      const id = e.currentTarget.attributes['data-id'].value\r\n      fetchSingleTap(id, (data) => {\r\n        setDetail({\r\n          user: users.find(user => user.id.toString() === id),\r\n          collection: mapHistory(data)\r\n        })\r\n        setShowDetail(true)\r\n      })\r\n    }\r\n    const closeDetail = () => {\r\n      setDetail({})\r\n      setShowDetail(false)\r\n    }\r\n    if (showDetail) {\r\n      return <TapDetail detail={detail} onCancel={closeDetail} />\r\n    }\r\n    if (!isAuth) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n      <Container component=\"main\" className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Paper elevation={0}>\r\n\t\t\t\t<Header selected=\"dashboard\" />\r\n\t\t\t\t<TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Name</TableCell>\r\n            <TableCell align=\"center\">Email</TableCell>\r\n            <TableCell align=\"center\">Active</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users.map((row) => (\r\n            <TableRow key={row.id} data-id={row.id} hover onClick={handleRowClick}>\r\n              <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                {`${row.first_name} ${row.last_name}`}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.email}</TableCell>\r\n              <TableCell align=\"center\">{row.active === 1 ? 'Yes' : 'No'}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\t\t\t</Paper>\r\n\t\t</Container>\r\n    )\r\n    // }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n    users: state.users,\r\n    isAuth: state.isAuth,\r\n  });\r\n  \r\n  /**\r\n   *  connect function of redux\r\n   */\r\n  export default connect(\r\n    mapStateToProps,\r\n    {\r\n      fetchTap,\r\n    },\r\n  )(Dashboard);\r\n  ","import {\r\n\tBox,\r\n\tButton,\r\n\tContainer,\r\n\tCssBaseline,\r\n\tGrid,\r\n\tPaper,\r\n\tTextField,\r\n\tTypography,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom'\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport {connect} from 'react-redux';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt'\r\nimport ThumbDownOutlinedIcon from '@material-ui/icons/ThumbDownOutlined'\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined'\r\nimport Header from './Header'\r\nimport useStyles from './Login.style'\r\nimport { fetchRequests, updateUser } from './../actions/shcm.action'\r\n\r\nfunction Requests({ updateUser, isAuth }) { \r\n  const classes = useStyles()\r\n  const [requests, setRequests] = useState([])\r\n  useEffect(() => {\r\n    fetchRequests((data) => {\r\n      setRequests(data)\r\n    })\r\n  }, [])\r\n\tconst onApprove = (event) => {\r\n    const dataId = event.currentTarget.id\r\n    updateUser(dataId, () => {\r\n      fetchRequests((data) => {\r\n        setRequests(data)\r\n      })\r\n    })\r\n  }\r\n\tconst acceptIcon = (row) => {\r\n    return (\r\n      <Tooltip title='Accept'>\r\n        <IconButton\r\n          onClick={onApprove}\r\n          aria-label='Accept'\r\n          id={row.id}\r\n        >\r\n            <ThumbUpAltIcon fontSize=\"small\" color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  if (!isAuth) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\treturn (\r\n\t\t<Container component=\"main\" className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Paper elevation={0}>\r\n\t\t\t\t<Header selected=\"requests\" />\r\n\t\t\t\t<TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">FirstName</TableCell>\r\n            <TableCell align=\"center\">LastName</TableCell>\r\n            <TableCell align=\"center\">Email</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {requests.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                {row.first_name}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.last_name}</TableCell>\r\n              <TableCell align=\"center\">{row.email}</TableCell>\r\n              <TableCell align=\"center\">\r\n\t\t\t\t\t\t\t\t{acceptIcon(row)}\r\n\t\t\t\t\t\t\t</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\t\t\t</Paper>\r\n\t\t</Container>\r\n\t)\r\n\t// }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.isAuth,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    updateUser,\r\n  },\r\n)(Requests);\r\n  ","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport Login from './components/Login'\r\nimport Dashboard from './components/Dashboard'\r\nimport Requests from './components/Requests'\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n        <Route exact path=\"/\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path=\"/requests\">\r\n            <Requests />\r\n          </Route>\r\n          {/* <Route component={Notfound} /> */}\r\n        </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import './styles/style.scss'\nimport React from 'react';\nimport Routes from './routes'\nimport configurationSetting from './api/httpcliennt'\n\nconfigurationSetting()\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {\r\n}\r\nlet enhancer = null\r\nconst reduxImmutableStateInvariant = require('redux-immutable-state-invariant').default\r\nenhancer = composeWithDevTools(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\nconst store = createStore(rootReducer, initialState, enhancer)\r\n\r\nexport default store\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { isAuth, users } from './shcm.reducer'\r\n\r\nexport default combineReducers({\r\n    users,\r\n    isAuth,\r\n  })","export const isAuth = (state = false, action = {}) => {\r\n    if (action.type === 'AUTH') {\r\n      return action.data\r\n    }\r\n    return state\r\n  }\r\n\r\n  export const users = (state = [], action = {}) => {\r\n    if (action.type === 'USERS') {\r\n      return action.data\r\n    }\r\n    return state\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { SnackbarProvider } from 'notistack'\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider\n        maxSnack={5}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        preventDuplicate\n      >\n      <Provider store = { store }>\n        <App />\n      </Provider>\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}